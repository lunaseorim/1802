na.omit
R1 <- na.omit(R1)
R1 %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation = 0, maxRotation = 0)
rm(list = c("R1","R2","russia1"))
L1T <- table(LC[ ,1]) %>%
data.frame() %>%
`colnames<-`(c("Cancer","Freq"))
ggplot(L1T,aes(x = Cancer, y = Freq)) +
geom_bar(stat = "identity", fill = "lightblue", colour = "black",width = 0.4) +
ylim(0, max(L1T$Freq) * 1.05)
ggplot(LC, aes(x = Age, y = Smoking, color = LC)) +
geom_point()
L1T <- table(LC[ ,1]) %>%
data.frame() %>%
`colnames<-`(c("Cancer","Freq"))
ggplot(L1T,aes(x = Cancer, y = Freq)) +
geom_bar(stat = "identity", fill = "lightblue", colour = "black",width = 0.4) +
ylim(0, max(L1T$Freq) * 1.05)
ggplot(LC, aes(x = Age, y = Smoking, color = LC)) +
geom_point()
ggplot(LC, aes(x = Age, y = Smoking, color = LC)) +
geom_point() +
geom_smooth()
ggplot(LC, aes(x = Age, y = Smoking, color = LC)) +
geom_point()
L1T <- table(LC[ ,1]) %>%
data.frame() %>%
`colnames<-`(c("Cancer","Freq"))
ggplot(L1T,aes(x = Cancer, y = Freq)) +
geom_bar(stat = "identity", fill = "lightblue", colour = "black",width = 0.4) +
ylim(0, max(L1T$Freq) * 1.05)
ggplot(LC, aes(x = Age, y = Smoking, color = LC)) +
geom_point()
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot() +
geom_smooth()
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot()
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot(width = 5)
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot(width = 3)
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot(width = 1)
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot(width = 3)
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot(width = 4)
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking),width = 4) +
geom_boxplot()
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking),width = 3) +
geom_boxplot()
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking),width = 1) +
geom_boxplot()
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot()
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
count(noun, sort=TRUE) %>%
filter(n>=2)
library(tidyverse)
library(tidytext)
library(KoNLP)
useNIADic()
library(wordcloud2)
library(reshape2)
m_df <- read_lines('data/moon.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
count(noun, sort=TRUE) %>%
filter(n>=2)
View(m_df)
m_df <- read_lines('data/moon.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
View(m)
m
lapply(m, function)
lapply(m)
list(m)
table(m)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
table
m
t(m)
kable(m)
kableExtra::kable(m)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
View(m)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE)
m
t(m)
table(t(m))
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
View(m)
list(m)
list(t(m)
)
kableExtra::kable(list(t(m)))
library("tidyverse", lib.loc="~/R/win-library/3.5")
kableExtra::kable(list(t(m)))
library("kableExtra", lib.loc="~/R/win-library/3.5")
kableExtra::kable(list(t(m)))
kable(list(t(m)))
list(t(m))
apply(t(m))
apply(t(m),)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
m
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
table()
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
table()
m
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
kable
m
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
View(m)
save_kable(m)
View(m)
m
t(m)
save(m)
write.csv(m)
write.csv(m, "data/wordcloud2.csv")
word2 <- read.csv("data/wordcloud2.csv")
table(word2)
View(word2)
table2
table23
table3
table1
table
table(table3)
table(t(table3)
)
table(t(m))
table(t(m))
aaa <- table(t(m))
aaa
kable(t(m))
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE)
table(m)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
table(m)
table(m$noun)
m <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
filter(n>=2)
table(m$noun)
library()
read.csv("data/data.csv")
dt <- read.csv("data/data.csv")
View(dt)
library(tidyverse)
dt[,3]
dt[ ,3] >= 3.5
dt[,20]
dt[ ,20]
dt[ ,10]
dt[10,1]
dt[1:10, ]
sil <- dt[1:10, ]
sil[ ,3]
sil[ ,3] >= 3
if(sil) {sil$등락률... > 3}
if(sil) {sil$등락률... > 3,aa}
if(sil$등락률... > 3) {aa}
if(sil$등락률... > 3)
View(sil)
View(sil)
sil[,3] >=3
sil[,3] >= 3
str(sil)
dt <- read.csv("data/data.csv",
stringsAsFactors = F)
sil <- dt[1:10, ]
str(sil)
as.numeric(sil)
as.double(sil)
dt <- read.csv("data/data.csv",)
sil <- dt[1:10, ]
as.numeric(sil)
as.numeric(sil[,])
as.numeric(sil[,1])
str(sil)
dt <- read.csv("data/data.csv",
stringsAsFactors = F)
as.numeric(sil[,1])
is.numeric(sil)
a <- as.numeric(sil)
str(sil)
dt <- read.csv("data/data.csv",
as.is = numeric())
sil <- dt[1:10, ]
as.numeric(sil)
str(sil)
dt <- read.csv("data/data.csv",
as.is = T)
sil <- dt[1:10, ]
str(sil)
dat <- sapply(dat[ , ] , as.numeric)
dat <- sapply(dt[ , ] , as.numeric)
is.na(dt)
dt <- read.csv("data/data.csv",
stringsAsFactors = F)
dat <- sapply(dt[ , ] , as.numeric)
sil <- dt[1:10, ]
as.numeric(sil)
dat <- sapply(sil[ , ],as.numeric)
dat <- lapply(sil[ , ],as.numeric)
dat <- lapply(sil[ 2:3, ],as.numeric)
dat <- lapply(sil[2:3, ],as.numeric)
dat <- lapply(sil[,2:3 ],as.numeric)
sil[,2:3]
as.numeric(sil[,c(2,3)])
lapply(sil[,c(2,3)],as.numeric)
lapply(sil[,2],as.numeric)
lapply(sil[,3],as.numeric)
sapply(sil[,2:3],as.numeric)
dt <- read.csv("data/data.csv",
stringsAsFactors = F)
sil <- dt[1:10, ]
as.numeric(sil[,c(2,3)])
sapply(sil[,2:3],as.numeric)
str(sil)
str(sil)
sil[,3] >= 3
dt[,3] >= 3
which(dt[,3] >= 3)
dt[which(dt[,3] >= 3),]
dt[which(dt[,3] >= 3.5),]
str(dt)
library(xlsx)
str(dt)
dt <- read.csv("data/data.csv",
stringsAsFactors = F)
dt <- read.csv("data/data.csv",
stringsAsFactors = F)
getwd()
setwd("C:/Users/heesu/Desktop/dt/Data_visualization/R")
dt <- read.csv("./data.csv",
stringsAsFactors = F)
dt <- read.csv("./data.csv",
stringsAsFactors = F,
col.names = c("일자","지수","등락률"))
View(dt)
which(dt[,3]>=3.5)+1
dt[which(dt[,3]>=3.5)+1,]
dt2 <- dt[which(dt[,3]>=3.5)+1,]
View(dt)
View(dt2)
is.na(dt2)
na.rm(dt2)
mean(dt2,na.rm = T)
mean(dt2,na.rm = F)
mean(dt2$등락률,na.rm = T)
dt2 %>%
summary()
dt2 %>%
summary(.$등락률)
dt2 %>%
summary(.$등락률)
summary(dt2$등락률)
summary(dt2$등락률,na.rm = T)
dt <- dt[2946:6120,]
str(dt)
dt[which(dt[,3] >= 3.5),]
dt2 <- dt[which(dt[,3]>=3.5)+1,]
summary(dt2$등락률)
summary(dt2$등락률)
dt2
count(dt2$등락률>0)
dt2$등락률 > 0
na.omit(dt2)
dt2 <- na.omit(dt2)
summary(dt2$등락률)
count(dt2$등락률 > 0)
dt2$등락률 > 0
count(which(dt2$등락률 > 0))
which(dt2$등락률 > 0)
count(dt,which(dt2$등락률 > 0))
which(dt2$등락률 > 0)
count(dt[which(dt2$등락률 > 0),])
count(dt[which(dt2$등락률 =< 0),])
count(dt[which(dt2$등락률 < 0),])
pander()
d_up <- count(dt[which(dt2$등락률 > 0),])
d_down <- count(dt[which(dt2$등락률 < 0),])
list(d_up,d_down)
data.frame(d_up,d_down)
data.frame( "상승" = c(15,15/26),
"하락" = c(11,11/25))
View(dat)
rm(list = )
library(tidyverse)
library(xlsx)
dt <- read.csv("./data.csv",
stringsAsFactors = F,
col.names = c("일자","지수","등락률"))
dt <- read.csv("../data.csv",
stringsAsFactors = F,
col.names = c("일자","지수","등락률"))
data <- read.csv("./data.csv",
stringsAsFactors = F,
col.names = c("일자","지수","등락률"))
data <- read.csv("./data.csv",
stringsAsFactors = F)
data <- read.csv("./data.csv",
stringsAsFactors = F)
data <- read.csv("../data.csv",
stringsAsFactors = F)
setwd("C:/Users/heesu/Desktop/dt/Data_visualization/R")
data <- read.csv("../data.csv",
stringsAsFactors = F)
data <- read.csv("data/data.csv",
stringsAsFactors = F)
data <- read.csv("./data/data.csv",
stringsAsFactors = F)
setwd("C:/Users/heesu/Desktop/dt/Data_visualization")
data <- read.csv("data/data.csv",
stringsAsFactors = F)
data <- read.csv("data/data.csv",
stringsAsFactors = F)
data <- read.csv("data/data.csv")
data <- read.csv()
data <- read.csv(file.choose())
View(data)
rm(list = "data")
kospi_data <- read.csv("data/data.csv")
kospi_data <- read.csv2("data/data.csv")
```{r read data}
kospi_data <- read.csv("data/data.csv")
read.csv("data/data.csv")
setwd("C:/Users/heesu/Desktop/dt/Data_visualization")
read.csv("data/data.csv")
kospi_data <- read.csv("data/lung-cancer.csv")
kospi_data <- read.csv("data/lung-cancer")
kospi_data <- read.csv("../data/lung-cancer")
kospi_data <- read.csv("../data/data.csv")
library(tidyverse)
library(xlsx)
kospi_data <- read.csv("../data/data.csv")
library(plyr)
library(dplyr)
library(pander)
library(knitr)
kospi_data <- read.csv("../data/data.csv")
kospi_data <- read.csv("../data/kospi.csv")
str(kospi_data)
kospi_data <- read.csv("../data/kospi.csv",
stringsAsFactors = F)
str(kospi_data)
kospi_data <- read.csv("../data/kospi.csv",
stringsAsFactors = T)
kospi_data <- read.csv("../data/kospi.csv",
stringsAsFactors = T,
col.names = c("date","price","rate"))
View(kospi_data)
str(kospi_data)
dt[which(kospi_data[,3] >= 3.5),]
kospi_data[which(kospi_data[,3] >= 3.5),]
kospi_data %$%
`[` which(.[,3] >= 3.5),
kospi_data %>%
which(.[,3] >= 3.5)
kospi_data %>%
which(kospi_data[,3] >= 3.5)
high_rate <- kospi_data[which(
kospi_data[,3] >= 3.5),]
View(high_rate)
kable(high_rate)
high1d <- kospi_data[which(kospi_data[,3]>=3.5)+1,]
View(high1d)
high1d <- kospi_data[which(kospi_data[,3]>=3.5)+1,]
high2d <- kospi_data[which(kospi_data[,3]>=3.5)+2,]
high3d <- kospi_data[which(kospi_data[,3]>=3.5)+3,]
high4d <- kospi_data[which(kospi_data[,3]>=3.5)+4,]
high5d <- kospi_data[which(kospi_data[,3]>=3.5)+5,]
high1d <- kospi_data[which(kospi_data[,3]>=3.5)+1,] %>%
na.omit()
high1d <- kospi_data[which(kospi_data[,3]>=3.5)+1,] %>%
na.omit()
high2d <- kospi_data[which(kospi_data[,3]>=3.5)+2,] %>%
na.omit()
high3d <- kospi_data[which(kospi_data[,3]>=3.5)+3,] %>%
na.omit()
high4d <- kospi_data[which(kospi_data[,3]>=3.5)+4,] %>%
na.omit()
high5d <- kospi_data[which(kospi_data[,3]>=3.5)+5,] %>%
na.omit()
View(high1d)
mean(high1d)
View(high1d)
mean(high1d$rate)
mean(high1d$rate)
mean(high1d$rate)
mean(high2d$rate)
mean(high3d$rate)
mean(high4d$rate)
mean(high5d$rate)
kable(mean(high1d$rate)
mean(high2d$rate)
kable(mean(high1d$rate),
mean(high2d$rate),
mean(high3d$rate),
mean(high4d$rate),
mean(high5d$rate))
table(mean(high1d$rate),
mean(high2d$rate),
mean(high3d$rate),
mean(high4d$rate),
mean(high5d$rate))
install.packages("getsymbol")
?getsymbol
?getsymbols
