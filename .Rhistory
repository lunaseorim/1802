"그렇다",
"매우 그렇다"),
levels = 1:7)
A1$환경2순위 %<>%
factor(labels = c("전혀 그렇지 않다",
"그렇지 않다",
"대체적으로 그렇지 않다",
"보통이다",
"대체적으로 그렇다",
"그렇다",
"매우 그렇다"),
levels = 1:7)
A1$동기1순위 %<>%
factor(labels = c("나의 적성과 능력을 발휘하기 위해서",
"높은 소득을 얻을 수 있어서",
"정부의 창업지원 정책의 영향을 받아서",
"생계 유지를 위해서",
"기타"),
levels = 1:5)
A1$동기2순위 %<>%
factor(labels = c("나의 적성과 능력을 발휘하기 위해서",
"높은 소득을 얻을 수 있어서",
"정부의 창업지원 정책의 영향을 받아서",
"생계 유지를 위해서",
"기타"),
levels = 1:5)
means <- ddply(A1,~권역,summarise,소득평균 = round(mean(대표자소득)))
#시각화를위하여 id부여
A001 <- means1 %>%
`[`
#시각화를위하여 id부여
A001 <- means %>%
`[`
View(A001)
#시각화를위하여 id부여
A001 <- means %>%
data.frame(.,means1[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),])
#시각화를위하여 id부여
A001 <- means %>%
data.frame(.,means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),])
#시각화를위하여 id부여
A001 <- means %>%
data.frame([c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),])
#시각화를위하여 id부여
A001 <- means %>%
data.frame(.[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),])
#시각화를위하여 id부여
A001 <- means %>%
data.frame(.,.[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),])
#시각화를위하여 id부여
A001 <- means %>%
[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),]
#시각화를위하여 id부여
A001 <- means %>%
`[` c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),]
#시각화를위하여 id부여
A001 <- means %>%
`[` c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6)
#시각화를위하여 id부여
A001 <- means %>%
`[` (1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6)
#시각화를위하여 id부여
A001 <- means %>%
`[` 1
#시각화를위하여 id부여
A001 <- means[(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),]
#시각화를위하여 id부여
A001 <- means[(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),]
#시각화를위하여 id부여
A001 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),]
View(A001)
#시각화를위하여 id부여
A001 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`colnames<-`(1:17)
#시각화를위하여 id부여
A001 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`row.names<-`(1:17)
#시각화를위하여 id부여
A001 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`row.names<-`(1:17) %>%
`colnames<-`(1:17)
A001$id %>%
`[<-` 1:17
A001$id <- 1:17
View(A1)
A01 <- read.csv("data/전체데이터.csv")
A01$권역 %<>%
factor(labels = c("서울",
"인천/경기",
"충청권",
"호남권",
"영남권",
"강원/제주"),
levels = 1:6)
A01$업종 %<>%
factor(labels = c("농림어업",
"제조업",
"전자상거래업",
"출판, 영상, 방송통신, 정보서비스업",
"기타금융지원서비스업",
"전문,과학, 기술서비스업",
"사업시설관리, 사업지원서비스업",
"교육서비스업",
"창작, 예술 및 여가관련 서비스업",
"수리업"),
levels = 1:10)
A01$환경1순위 %<>%
factor(labels = c("전혀 그렇지 않다",
"그렇지 않다",
"대체적으로 그렇지 않다",
"보통이다",
"대체적으로 그렇다",
"그렇다",
"매우 그렇다"),
levels = 1:7)
A01$환경2순위 %<>%
factor(labels = c("전혀 그렇지 않다",
"그렇지 않다",
"대체적으로 그렇지 않다",
"보통이다",
"대체적으로 그렇다",
"그렇다",
"매우 그렇다"),
levels = 1:7)
A01$동기1순위 %<>%
factor(labels = c("나의 적성과 능력을 발휘하기 위해서",
"높은 소득을 얻을 수 있어서",
"정부의 창업지원 정책의 영향을 받아서",
"생계 유지를 위해서",
"기타"),
levels = 1:5)
A01$동기2순위 %<>%
factor(labels = c("나의 적성과 능력을 발휘하기 위해서",
"높은 소득을 얻을 수 있어서",
"정부의 창업지원 정책의 영향을 받아서",
"생계 유지를 위해서",
"기타"),
levels = 1:5)
means <- ddply(A01,~권역,summarise,소득평균 = round(mean(대표자소득)))
#시각화를위하여 id부여
A02 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`row.names<-`(1:17)
A02$id <- 1:17
#창업환경에 대하여..
apply(A01,A01$환경1순위,summarise)
#창업환경에 대하여..
tapply(A01,A01$환경1순위,summarise)
#창업환경에 대하여..
apply(A01,A01$환경1순위,summarise)
#창업환경에 대하여..
apply(A01,1,summarise)
#창업환경에 대하여..
apply(A01,2,summarise)
A01 %>%
str
#창업환경에 대하여..
apply(A01,2,table)
#창업환경에 대하여..
apply(A01$환경1순위,2,table)
#창업환경에 대하여..
apply(A01$환경1순위,1,table)
#창업환경에 대하여..
apply(A01$환경1순위,table)
#창업환경에 대하여..
apply(A01,1,table)
#창업환경에 대하여..
apply(A01,2,table)
#창업환경에 대하여..
A01$환경1순위 %>%
table
#창업환경에 대하여..
A03 <-
A01$환경1순위 %>%
table
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame
View(A03)
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-`("응답",Freq)
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-`("응답","Freq")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-`("응답","freq")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-`c("응답","freq")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-` c("응답","freq")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-` ("응답","freq")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-` ("응답")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`row.names<-` (c("응답","Freq"))
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`colnames<-` c("응답","Freq")
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`colnames<-` (c("응답","Freq"))
##플랏
ggplot(A03,aes(x=응답,
y=Freq)) +
geom_bar(stat = "identity")
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)
##지도시각화
korea <- shapefile("data//TL_SCCO_CTPRVN.shp")
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq,color = 'skyblues')) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq,color = 'skyblue')) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq,color = "blue")) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblues') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
plot.title=element_text(family="NanumGothic", face="bold", size=30, vjust=2, color="red")
출처: http://ngee.tistory.com/726 [ngee]))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title=element_text(family="NanumGothic", face="bold", size=30, vjust=2, color="red"))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
plot.title=element_text(family="NanumGothic", face="bold", size=30, vjust=2, color="red"))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번")
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번") +
theme(axis.text.x = element_text(angle = 35, hjust = 1),
plot.title=element_text(family="NanumGothic", face="bold", size=30, vjust=2, color="red"))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번") +
theme(axis.text.x = element_text(angle = 35, hjust = 1),
plot.title=element_text(family="NanumGothic", face="bold", size=30, color="red"))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번") +
theme(axis.text.x = element_text(angle = 35, hjust = 1),
plot.title=element_text(family="NanumGothic", face="bold", size=30, color="skyblue"))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번") +
theme(axis.text.x = element_text(angle = 35, hjust = 1),
plot.title=element_text(family='나눔바른고딕', face="bold", size=30, color="skyblue"))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번",caption = "center") +
theme(axis.text.x = element_text(angle = 35, hjust = 1),
plot.title=element_text(family='나눔바른고딕', size=30, color="skyblue"))
theme_update(plot.title = element_text(hjust = 0.5))
##플랏
ggplot(A03,aes(x=응답,y=Freq)) +
geom_bar(stat = "identity",fill = 'skyblue') +
ggtitle(label = "환경응답1번") +
theme(axis.text.x = element_text(angle = 35, hjust = 1),
plot.title=element_text(family='나눔바른고딕', size=30, color="skyblue"))
##지도시각화
korea <- shapefile("data//TL_SCCO_CTPRVN.shp")
korea <- spTransform(korea,CRS("+proj=longlat"))
korea_map <- fortify(korea)
merge_result <- merge(korea_map,data,by='id')
merge_result <- merge(korea_map,data,by='id')
korea_map <- fortify(korea)
merge_result <- merge(korea_map,data,by='id')
merge_result <- merge(korea_map,data,by='id')
korea_map <- fortify(korea)
merge_result <- merge(korea_map,data,by='id')
##지도시각화
korea <- shapefile("data/TL_SCCO_CTPRVN.shp")
korea <- spTransform(korea,CRS("+proj=longlat"))
korea_map <- fortify(korea)
merge_result <- merge(korea_map,data,by='id')
##지도시각화
korea <- shapefile("data/TL_SCCO_CTPRVN.shp")
View(korea)
korea@data[["CTPRVN_CD"]]
##지도시각화
korea <- shapefile("data/TL_SCCO_SIG.shp")
korea <- spTransform(korea,CRS("+proj=longlat"))
korea_map <- fortify(korea)
merge_result <- merge(korea_map,data,by='id')
korea <- shapefile("../TL_SCCO_CTPRVN.shp")
korea <- shapefile("data/TL_SCCO_CTPRVN.shp")
korea <- spTransform(korea,CRS("+proj=longlat"))
korea_map <- fortify(korea)
merge_result <- merge(korea_map,data,by='id')
A01 <- read.csv("data/전체데이터.csv")
A01$권역 %<>%
factor(labels = c("서울",
"인천/경기",
"충청권",
"호남권",
"영남권",
"강원/제주"),
levels = 1:6)
A01$업종 %<>%
factor(labels = c("농림어업",
"제조업",
"전자상거래업",
"출판, 영상, 방송통신, 정보서비스업",
"기타금융지원서비스업",
"전문,과학, 기술서비스업",
"사업시설관리, 사업지원서비스업",
"교육서비스업",
"창작, 예술 및 여가관련 서비스업",
"수리업"),
levels = 1:10)
A01$환경1순위 %<>%
factor(labels = c("전혀 그렇지 않다",
"그렇지 않다",
"대체적으로 그렇지 않다",
"보통이다",
"대체적으로 그렇다",
"그렇다",
"매우 그렇다"),
levels = 1:7)
A01$환경2순위 %<>%
factor(labels = c("전혀 그렇지 않다",
"그렇지 않다",
"대체적으로 그렇지 않다",
"보통이다",
"대체적으로 그렇다",
"그렇다",
"매우 그렇다"),
levels = 1:7)
A01$동기1순위 %<>%
factor(labels = c("나의 적성과 능력을 발휘하기 위해서",
"높은 소득을 얻을 수 있어서",
"정부의 창업지원 정책의 영향을 받아서",
"생계 유지를 위해서",
"기타"),
levels = 1:5)
A01$동기2순위 %<>%
factor(labels = c("나의 적성과 능력을 발휘하기 위해서",
"높은 소득을 얻을 수 있어서",
"정부의 창업지원 정책의 영향을 받아서",
"생계 유지를 위해서",
"기타"),
levels = 1:5)
A01 %>%
str
means <- ddply(A01,~권역,summarise,소득평균 = round(mean(대표자소득)))
#시각화를위하여 id부여
A02 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`row.names<-`(1:17)
A02$id <- 1:17
#창업환경에 대하여..
A03 <-A01$환경1순위 %>%
table %>%
data.frame %>%
`colnames<-` (c("응답","Freq"))
merge_result <- merge(korea_map,A02,by='id')
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 개수,color = 'red'))
p +
scale_fill_gradient(low = 'white',high='red')
View(A02)
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균,color = 'red'))
p +
scale_fill_gradient(low = 'white',high='red')
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균))
p +
scale_fill_gradient(low = 'white',high='red')
p +
scale_fill_gradient(low = 'white',high='orange')
str(A02)
as.integer(A02$소득평균)
A02$소득평균 <-as.integer(A02$소득평균)
merge_result <- merge(korea_map,A02,by='id')
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균))
p +
scale_fill_gradient(low = 'white',high='orange')
View(korea_map)
View(korea)
#시각화를위하여 id부여
A02 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`row.names<-`(0:16)
#시각화를위하여 id부여
A02 <- means[c(1,5,5,2,4,3,5,3,2,6,3,3,4,4,5,5,6),] %>%
`row.names<-`(1:17)
A02$id <- 0:16
merge_result <- merge(korea_map,A02,by='id')
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균))
p +
scale_fill_gradient(low = 'white',high='orange')
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균,color = black))
p +
scale_fill_gradient(low = 'white',high='orange')
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균,color = "black"))
p +
scale_fill_gradient(low = 'white',high='orange')
View(p)
p +
scale_fill_gradient2(low = 'white',mid = 'orange',high='lightred',midpoint = 25)
p +
scale_fill_gradient2(low = 'white',mid = 'lightblue',high='blue',midpoint = 25)
p +
scale_fill_gradient2(low = 'white',mid = 'orange',high='red',midpoint = 25)
p
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균))
p
p <- ggplot() +
geom_polygon(data = merge_result,aes(x=long,y=lat,group=group,
fill = 소득평균))
p +
scale_fill_gradient2(low = 'white',mid = 'orange',high='red',midpoint = 25)
p +
scale_fill_gradient2(low = 'white',mid = 'lightblue',high='blue',midpoint = 5)
p +
scale_fill_gradient2(low = 'white',high='orange',midpoint = 5)
p +
scale_fill_gradient2(low = 'white',high='orange',midpoint = 1)
p +
scale_fill_gradient2(low = 'white',high='orange',midpoint = 100)
p +
scale_fill_gradient2(low = 'white',high='orange')
View(A02)
p +
scale_fill_gradient(low = 'white',high='orange',
limits = c(180,240))
p +
scale_fill_gradient(low = 'white',high='orange',
limits = c(180,240))
