m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(shape = "cloud", fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(shape = "cloud", fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
?wordcloud2
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "skyblue"
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "skyblues"
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "skyblues",
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "skyblue",
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "YlRdOr",
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "Orange",
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "pastel",
minRotation=0, maxRotation=0)
1
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕', color = "pastel1",
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
a< -m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
a < -m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
a <- m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
View(a)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
library(tidyverse)
library(tidytext)
library(KoNLP)
library(wordcloud2)
russia4 <- read_lines('data/russia4.txt')
view(m)
View(a)
rm(list="a")
rm(list="m1")
rm(list="mp")
rm(list="mpd")
rm(list="m_df")
rm(list="m")
rm(list="russia4")
m_df <- read_lines('data/moon.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
library(tidyverse)
library(tidytext)
library(KoNLP)
library(wordcloud2)
library(reshape2)
m_df <- read_lines('data/moon.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
russia4 <- read_lines('data/russia4.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
View(russia4)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
russia4 <- read_lines('data/russia4.txt',
UTF-8) %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
russia4 <- read_lines('data/russia4.txt',
Encoding(UTF-8)) %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
russia4 <- read_lines('data/russia4.txt',
Encoding("UTF-8")) %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
russia4 <- read_lines('data/russia4.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
View(russia4)
russia1 <- read_lines('data/russia1.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
View(russia4)
View(russia1)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕')
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
m_df %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
View(russia1)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
russia4 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2])
russia4
View(russia4)
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2) %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
rm(list="russia4")
View(russia1)
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2])
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE)
russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
View(R1)
R1[6,1]
R1[6,1] <- "러시아"
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
R1[6,1] <- "러시아"
R1[12,1] <- "러시아"
R1[13,1] <- "한국"
R1[17,1] <- "대통"
R1[17,1] <- "대통령"
R1[33,1] <- "한국"
R1 %>%
wordcloud2(fontFamily = '나눔바른고딕',
minRotation = 0, maxRotation = 0)
russia1 <- read_lines('data/russia1.txt') %>%
SimplePos22 %>%
melt %>%
as_tibble %>%
select(3, 1)
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
View(russia1)
russia1 <- read_lines('data/russia1.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
View(russia1)
View(russia1)
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2])
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2)
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
useNIADic()
russia1 <- read_lines('data/russia1.txt') %>%
SimplePos09 %>%
melt %>%
as_tibble %>%
select(3, 1)
R1 <- russia1 %>%
mutate(noun=str_match(value, '([가-힣]+)/N')[,2]) %>%
na.omit %>%
filter(str_length(noun)>=2) %>%
count(noun, sort=TRUE) %>%
filter(n>=2)
wordcloud2(fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
wordcloud2(R1,fontFamily = '나눔바른고딕',
minRotation=0, maxRotation=0)
View(russia1)
View(R1)
read.csv("data/data.csv")
install.packages("nnet")
library(xlsx)
library(nnet)
data<-read.xlsx2(file.choose(),1)
data<-read.xlsx2(file.choose(),1)
data<-read.xlsx2(file.choose(),1)
data<-read.xlsx2(file.choose(),1)
data<-read.xlsx2(file.choose(),1)
View(data)
data
plot(data$년.월.일,data$종가)
grid()
plot(data$년.월.일,data$종가) %>%
grid()
?grid
library(tidyverse)
plot(data$년.월.일,data$종가) %>%
grid()
rm(list="data")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
library(ggplot2)
library(plyr)
library(dplyr)
library(pander)
library(knitr)
L1T <- table(LC[ ,1]) %>%
data.frame() %>%
`colnames<-`(c("Cancer","Freq"))
ggplot(L1T,aes(x = Cancer, y = Freq)) +
geom_bar(stat = "identity", width = 0.4) +
ylim(0, max(L1T$Freq) * 1.05)
ggplot(LC, aes(x = Age, y = Smoking, color = LC)) +
geom_point()
data.frame("LungCancer" = LC[c(1:49), 4],
"NoCancer" = LC[c(50:147),4 ]) %>%
summary
ggplot(LC,aes(x=LC,y=Smoking,
fill=Smoking)) +
geom_boxplot()
data.frame("LungCancer" = LC[c(1:49), 4],
"NoCancer" = LC[c(50:147),4 ]) %>%
summary %>%
t
View(LC)
summary(LC[match(lungcancer), ])
summary(LC[match(LungCancer), ])
match(LC,LungCancer)
match(LC[,],LungCancer)
match(LC[,1],LungCancer)
match(LC[,1],"LungCancer")
summary(LC[match("LungCancer"), ])
summary(table(LC[match("LungCancer"), ]))
match(LC[,1],"LungCancer") %>%
summary
match(LC[,1],"LungCancer") %>%
LC
LC %>%
match(LC[,1],"LungCancer")
LC %>%
match(.[,1],"LungCancer")
LC %>%
match("LungCancer")
LC %>%
match(.,"LungCancer")
LC %>%
match(.$LC,"LungCancer")
#install.packages("ggplot2")
#install.packages("dplyr")
library(ggplot2)
library(plyr)
library(dplyr)
library(pander)
library(knitr)
getwd()
LC <- read.csv("data/lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("../lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
setwd(R)
setwd(./r)
setwd(../r)
setwd("data_visualization/r")
setwd("C:/Users/heesu/Desktop/dt/Data_visualization/R")
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("../lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("./lung-cancer.csv")
LC <- read.csv("../lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("data/lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv(file.choose(),
stringsAsFactors = FALSE)
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("data/lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("../lung-cancer.csv",
stringsAsFactors = FALSE)
setwd("C:/Users/heesu/Desktop/dt/Data_visualization")
LC <- read.csv("../lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
LC <- read.csv("./lung-cancer.csv/",
stringsAsFactors = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
library(ggplot2)
library(plyr)
library(dplyr)
library(pander)
library(knitr)
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
getwd()
str(LC)
```{r data, echo=FALSE}
LC <- read.csv("./lung-cancer.csv",
stringsAsFactors = FALSE)
